---The bootloader is called after the inital startup file.
--It allows the user to choose between the normal os and recovery.
--Once the pc is turned on, the user has @{time} seconds so press shift.
--If they hit shift in time then the computer will boot into recovery.
--If not the computer will continue and boot like notmal
--@author Morganamilo
--@copyright Morganamilo 2016
--@script bootloader

---The timer the user has to enter recovery.
local time = .3

---Starts a timer, and waits for an Event.
--if the event is the timer then it boots LunaOS normaly.
--if the event is the key shift then reovery is booted.
--otherise it loops and waits for the next event
--@usage main()
function main()
	local timer = os.startTimer(time)
	
	while true do
		--wait for an event
		local event, key = coroutine.yield()

		--if shift was hit in time go to recovery
		if event == 'key' and key == 42 then
			os.cancelTimer(timer)
			dofile("bootloader/recovery")
			break
		elseif event == 'timer' and key == timer then
			--otherwise boot the normal boot file
			dofile("LunaOS/system/boot/boot.lua")
			break
		end
	end
end

main()

